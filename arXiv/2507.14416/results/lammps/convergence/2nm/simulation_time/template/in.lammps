newton on
units        metal
boundary p p p
atom_style full
pair_style buck/coul/long 15.0
kspace_style pppm 1.0e-5

neighbor 1.0 bin
neigh_modify delay 1 one 4000 binsize 12.0
variable random_seed equal 45585

#
#	PORE SETUP
#

read_data   ./data/2nm_particle.data

#atom_map 1 Fe2+ 2 Fe3+ 3 O2-
pair_coeff 1 1 0.0 1.0 0.0
pair_coeff 1 2 0.0 1.0 0.0
pair_coeff 1 3 1515.42 0.2756 0

pair_coeff 2 2 0.0 1.0 0.0
pair_coeff 2 3 895.56 0.3099 0

pair_coeff 3 3 7322.63 0.2301 38.532

# Output
write_data ./results/initial_structure.data

#
#	ENERGY MINIMIZATION
#
variable etol        equal 0.0
variable ftol        equal 1
variable maxiter     equal 10000
variable thermo_iter equal floor(${maxiter}/100)
variable maxeval     equal 100000


# monitoring "fnorm" during minimization
thermo ${thermo_iter}
thermo_style custom step temp pe etotal press fnorm
thermo_modify norm no

# atoms only
min_style cg
minimize ${etol} ${ftol} ${maxiter} ${maxeval}
write_data ./results/structure_relaxed_atoms.data

variable init_temperature  equal 50.0
variable temperature       equal 100.0
variable delta_temperature equal 100.0
variable final_temperature equal 150.0

variable init_pressure    equal 0
variable pressure         equal 0

# time in ps
variable time_nvt_heating equal  10
variable time_nvt_eq      equal  10
variable time_nvt_prod    equal  5000
variable time_nvt_phonon  equal  50
variable time_cooling     equal  10

variable drag_value       equal 0.2

variable dt               equal 0.001
variable time_factor      equal 1/${dt}

variable temperature_damp equal ${dt}*100
variable pressure_damp    equal ${dt}*1000


variable iterations_nvt_heating  equal floor(${time_nvt_heating}*${time_factor})
variable iterations_nvt_eq       equal floor(${time_nvt_eq}*${time_factor})
variable iterations_nvt_prod     equal floor(${time_nvt_prod}*${time_factor})
variable iterations_nvt_phonon   equal floor(${time_nvt_phonon}*${time_factor})
variable iterations_cooling      equal floor(${time_cooling}*${time_factor})

variable output_nvt_heating  equal floor(${iterations_nvt_heating}/100)
variable output_nvt_eq       equal floor(${iterations_nvt_eq}/100)
variable output_nvt_prod     equal floor(${iterations_nvt_prod}/5000)
variable output_nvt_phonon   equal floor(${iterations_nvt_phonon}/5000)
variable output_cooling      equal floor(${iterations_cooling}/100)


timestep        ${dt}
run_style       verlet
velocity        all create ${init_temperature} ${random_seed} mom yes rot yes dist gaussian

label loop
if "${temperature} > ${final_temperature}" then "jump SELF break"

#------------NVT heating
reset_timestep 0
log ./results/nvt_heating_${temperature}K.log
fix             nvt_heating_id all nvt temp ${init_temperature} ${temperature} ${temperature_damp} drag ${drag_value}


# output
fix 		    output_id all print ${output_nvt_heating} "$(step),$(temp),$(press),$(pe),$(ke),$(ecoul),$(epair),$(lx),$(ly),$(lz),$(vol)" &
                title "time step,temperature,pressure,potential energy,kinetic energy,coulomb energy,pair energy,lx,ly,lz,vol" &
                file ./results/nvt_heating_${temperature}K.csv screen no
thermo_style    custom step temp press pe ke ecoul epair lx ly lz cella cellb cellc cellalpha cellbeta cellgamma vol
thermo          ${output_nvt_heating}

dump            trj_dump all atom/gz ${output_nvt_heating} ./results/nvt_heating_${temperature}K.lammpstrj.gz

#----------------------------
run             ${iterations_nvt_heating}
#----------------------------

unfix           nvt_heating_id
unfix		    output_id
undump		    trj_dump
write_restart	./results/restart_nvt_heating${temperature}K.dat

#------------NVT eq
log ./results/nvt_eq_${temperature}K.log

fix             nvt_eq_id all nvt temp ${temperature} ${temperature} ${temperature_damp} drag ${drag_value}

# output
fix 		    output_id all print ${output_nvt_eq} "$(step),$(temp),$(press),$(pe),$(ke),$(ecoul),$(epair),$(vol)" &
                title "time step,temperature,pressure,potential energy,kinetic energy,coulomb energy,pair energy,vol" &
                file ./results/nvt_eq_${temperature}K.csv screen no

thermo_style    custom step temp press pe ke ecoul epair vol
thermo          ${output_nvt_eq}
dump            trj_dump all atom/gz ${output_nvt_eq} ./results/nvt_eq_${temperature}K.lammpstrj.gz

#----------------------------
run             ${iterations_nvt_eq}
#----------------------------
unfix nvt_eq_id
unfix output_id
undump trj_dump
write_restart	./results/restart_nvt_eq_${temperature}K.dat

#------------NVT prod
log ./results/nvt_prod_${temperature}K.log

fix             nvt_prod_id all nvt temp ${temperature} ${temperature} ${temperature_damp}

# output
fix 		    output_id all print ${output_nvt_prod} "$(step),$(temp),$(press),$(pe),$(ke),$(ecoul),$(epair),$(vol)" &
                title "time step,temperature,pressure,potential energy,kinetic energy,coulomb energy,pair energy,vol" &
                file ./results/nvt_prod_${temperature}K.csv screen no

thermo_style    custom step temp press pe ke ecoul epair vol
thermo          ${output_nvt_prod}
dump            trj_dump all atom/gz ${output_nvt_prod} ./results/nvt_prod_${temperature}K.lammpstrj.gz

reset_timestep  0
#----------------------------
run             ${iterations_nvt_prod}
#----------------------------

unfix       nvt_prod_id
unfix 		output_id
undump      trj_dump

write_data      ./results/nvt_prod_${temperature}K.data
write_restart	./results/restart_nvt_prod_${temperature}K.dat


#------------NVT phonon
log ./results/nvt_phonon_${temperature}K.log

fix             nvt_phonon_id all nvt temp ${temperature} ${temperature} ${temperature_damp}

# output
fix 		    output_id all print ${output_nvt_phonon} "$(step),$(temp),$(press),$(pe),$(ke),$(ecoul),$(epair),$(vol)" &
                title "time step,temperature,pressure,potential energy,kinetic energy,coulomb energy,pair energy,vol" &
                file ./results/nvt_phonon_${temperature}K.csv screen no

thermo_style    custom step temp press pe ke ecoul epair vol
thermo          ${output_nvt_phonon}
dump            trj_dump all atom/gz ${output_nvt_phonon} ./results/nvt_phonon_${temperature}K.lammpstrj.gz

reset_timestep  0
#----------------------------
run             ${iterations_nvt_phonon}
#----------------------------

unfix       nvt_phonon_id
unfix 		output_id
undump      trj_dump

write_data      ./results/nvt_prod_${temperature}K.data
write_restart	./results/restart_nvt_prod_${temperature}K.dat




variable init_temperature  equal ${temperature}
variable temperature       equal ${init_temperature}+${delta_temperature}

jump SELF loop
label break

#------------NPT cooling
log ./results/npt_cooling.log

fix             cooling_id all npt temp ${temperature} ${init_temperature} ${temperature_damp} aniso ${pressure} ${pressure} ${pressure_damp}

fix 		output_id all print ${output_cooling} "$(step),$(temp),$(press),$(pe),$(ke),$(ecoul),$(epair),$(lx),$(ly),$(lz),$(cella),$(cellb),$(cellc),$(vol)" title "time step,temperature,pressure,potential energy,kinetic energy,coulomb energy,pair energy,lx,ly,lz,a,b,c,vol" file ./results/npt_cooling.csv screen no

thermo_style    custom step temp press pe ke ecoul epair lx ly lz cella cellb cellc cellalpha cellbeta cellgamma vol
thermo          ${output_cooling}
dump            trj_dump all atom/gz ${output_cooling} ./results/npt_cooling.lammpstrj.gz


#----------------------------
run             ${iterations_cooling}
#----------------------------
unfix       cooling_id
unfix		output_id
undump		trj_dump
#----------------------------
write_data      ./results/npt_cooled.data
